//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace storeManager.Entities
{
    public partial class Sale
    {
        #region Primitive Properties
    
        public virtual string InvoiceNumber
        {
            get;
            set;
        }
    
        public virtual decimal Amount
        {
            get;
            set;
        }
    
        public virtual System.DateTime InvoiceDate
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> AmountPaid
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> Balance
        {
            get;
            set;
        }
    
        public virtual string EmployeeID
        {
            get;
            set;
        }
    
        public virtual Nullable<int> StoreID
        {
            get;
            set;
        }
    
        public virtual string CustomerID
        {
            get;
            set;
        }
    
        public virtual Nullable<int> SaleTypeID
        {
            get;
            set;
        }
    
        public virtual string InvoiceState
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> Discount
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> Tax
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> PromisedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> DateClosed
        {
            get;
            set;
        }
    
        public virtual string CustomerPO
        {
            get;
            set;
        }
    
        public virtual Nullable<int> PaymentModeID
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> VoidSale
        {
            get;
            set;
        }
    
        public virtual string VoucherCode
        {
            get;
            set;
        }
    
        public virtual Nullable<int> SaleStatusID
        {
            get;
            set;
        }
    
        public virtual int SaleID
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> SubTotal
        {
            get;
            set;
        }
    
        public virtual Nullable<int> LocationID
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> CustBalance
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<SaleDetail> SaleDetails
        {
            get
            {
                if (_saleDetails == null)
                {
                    var newCollection = new FixupCollection<SaleDetail>();
                    newCollection.CollectionChanged += FixupSaleDetails;
                    _saleDetails = newCollection;
                }
                return _saleDetails;
            }
            set
            {
                if (!ReferenceEquals(_saleDetails, value))
                {
                    var previousValue = _saleDetails as FixupCollection<SaleDetail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSaleDetails;
                    }
                    _saleDetails = value;
                    var newValue = value as FixupCollection<SaleDetail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSaleDetails;
                    }
                }
            }
        }
        private ICollection<SaleDetail> _saleDetails;

        #endregion
        #region Association Fixup
    
        private void FixupSaleDetails(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SaleDetail item in e.NewItems)
                {
                    item.Sale = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SaleDetail item in e.OldItems)
                {
                    if (ReferenceEquals(item.Sale, this))
                    {
                        item.Sale = null;
                    }
                }
            }
        }

        #endregion
    }
}
